<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <oatconfig>
        <filefilterlist>
            <filefilter name="copyrightPolicyFilter" desc="Filters for compatibility，license header policies">
                <filteritem type="filename" name="hvigorfile.ts" desc="This is hvigor build script, which is automatically generated by IDE"/>
                <filteritem type="filename" name="*.json5" desc="This is hvigor configuration file, which is automatically generated by IDE"/>
                <filteritem type="filename" name=".gitignore" desc=".gitignore is autogenerated by Gitee for all Git repos"/>
                <filteritem type="filename" name="entry/.gitignore" desc=".gitignore is autogenerated by Gitee for all Git repos"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="MainAbility.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="AbilityStage.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="Ability.test.ets" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="OpenHarmonyTestRunner.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="entry/src/ohosTest/ets/TestAbility/.*" type="filepath"/>
                <filteritem type="filename" name="hvigorw.bat" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filename" name="hvigorw" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filepath" name="hvigor/hvigor-wrapper.js" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filename" name="hvigor-config.json5" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
            </filefilter>
            <filefilter name="defaultPolicyFilter" desc="Filters for compatibility，license header policies">
                <filteritem type="filename" name="hvigorfile.ts" desc="This is hvigor build script, which is automatically generated by IDE"/>
                <filteritem type="filename" name="*.json5" desc="This is hvigor configuration file, which is automatically generated by IDE"/>
                <filteritem type="filename" name=".gitignore" desc=".gitignore is autogenerated by Gitee for all Git repos"/>
                <filteritem type="filename" name="entry/.gitignore" desc=".gitignore is autogenerated by Gitee for all Git repos"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="MainAbility.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="AbilityStage.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="Ability.test.ets" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="OpenHarmonyTestRunner.ts" type="filename"/>
                <filteritem desc="DevEco Studio自动生成，没有修改" name="entry/src/ohosTest/ets/TestAbility/.*" type="filepath"/>
                <filteritem type="filename" name="hvigorw.bat" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filename" name="hvigorw" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filepath" name="hvigor/hvigor-wrapper.js" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
                <filteritem type="filename" name="hvigor-config.json5" desc="hvigorw配置文件，DevEco Studio自动生成，不手动修改"/>
            </filefilter>
            <filefilter name="defaultPolicyFilter" desc="Filters for copyright header policies">
            </filefilter>
            <filefilter name="binaryFileTypePolicyFilter" desc="Filters for binary file policies">
                <filteritem type="filepath" name="entry/src/ohosTest/resources/base/media/icon.png" desc="png图片格式文件,用于展示示例"/>
                <filteritem type="filepath" name="AppScope/resources/base/media/app_icon.png" desc="png图片格式文件,用于展示示例"/>
                <filteritem type="filepath" name="entry/src/main/resources/base/media/icon.png" desc="png图片格式文件,用于展示示例"/>
            </filefilter>
        </filefilterlist>
        <policylist>
            <policy name="projectPolicy" desc="">
                <policyitem type="license" name="MIT" path="LICENSE" group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="NOTICE"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="entry/src/main/ets/entryability/EntryAbility.ts"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="entry/src/ohosTest/ets/test/RestApiJsUnit.test.ets"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="library/rocketChat.ets"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="entry/src/main/ets/pages/Index.ets"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="library/src/main/ets/components/rest/RestAPI.ts"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="library/src/main/ets/components/rest/core/HttpRequestConnector.ts"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="entry/src/main/ets/pages/RestApiSamepleEntity.ets"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
                <policyitem type="license" name="MIT" path="entry/src/ohosTest/ets/test/List.test.ets"  group="defaultGroup" filefilter="defaultPolicyFilter" desc="本库属于示例代码,匹配原库协议,符合开源要求"/>
            </policy>
        </policylist>
    </oatconfig>
</configuration>
