import { require } from '../../../lib/require.ts';
const { RocketChatAssociationModel } = require('@rocket.chat/apps-engine/definition/metadata/RocketChatAssociations.js');
export class RoomExtender {
  room;
  kind;
  members;
  constructor(room){
    this.room = room;
    this.kind = RocketChatAssociationModel.ROOM;
    this.members = [];
  }
  addCustomField(key, value) {
    if (!this.room.customFields) {
      this.room.customFields = {};
    }
    if (this.room.customFields[key]) {
      throw new Error(`The room already contains a custom field by the key: ${key}`);
    }
    if (key.includes('.')) {
      throw new Error(`The given key contains a period, which is not allowed. Key: ${key}`);
    }
    this.room.customFields[key] = value;
    return this;
  }
  addMember(user) {
    if (this.members.find((u)=>u.username === user.username)) {
      throw new Error('The user is already in the room.');
    }
    this.members.push(user);
    return this;
  }
  getMembersBeingAdded() {
    return this.members;
  }
  getUsernamesOfMembersBeingAdded() {
    return this.members.map((u)=>u.username);
  }
  getRoom() {
    return structuredClone(this.room);
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvYWJoaW5hdi9yb2NrZXQuY2hhdC9Sb2NrZXQuQ2hhdC9wYWNrYWdlcy9hcHBzLWVuZ2luZS9kZW5vLXJ1bnRpbWUvbGliL2FjY2Vzc29ycy9leHRlbmRlcnMvUm9vbUV4dGVuZGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSVJvb21FeHRlbmRlciB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL2FjY2Vzc29ycy9JUm9vbUV4dGVuZGVyLnRzJztcbmltcG9ydCB0eXBlIHsgUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWwgYXMgX1JvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsIH0gZnJvbSAnQHJvY2tldC5jaGF0L2FwcHMtZW5naW5lL2RlZmluaXRpb24vbWV0YWRhdGEvUm9ja2V0Q2hhdEFzc29jaWF0aW9ucy50cyc7XG5pbXBvcnQgdHlwZSB7IElSb29tIH0gZnJvbSAnQHJvY2tldC5jaGF0L2FwcHMtZW5naW5lL2RlZmluaXRpb24vcm9vbXMvSVJvb20udHMnO1xuaW1wb3J0IHR5cGUgeyBJVXNlciB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL3VzZXJzL0lVc2VyLnRzJztcblxuaW1wb3J0IHsgcmVxdWlyZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9yZXF1aXJlLnRzJztcblxuY29uc3QgeyBSb2NrZXRDaGF0QXNzb2NpYXRpb25Nb2RlbCB9ID0gcmVxdWlyZSgnQHJvY2tldC5jaGF0L2FwcHMtZW5naW5lL2RlZmluaXRpb24vbWV0YWRhdGEvUm9ja2V0Q2hhdEFzc29jaWF0aW9ucy5qcycpIGFzIHtcbiAgICBSb2NrZXRDaGF0QXNzb2NpYXRpb25Nb2RlbDogdHlwZW9mIF9Sb2NrZXRDaGF0QXNzb2NpYXRpb25Nb2RlbDtcbn07XG5cbmV4cG9ydCBjbGFzcyBSb29tRXh0ZW5kZXIgaW1wbGVtZW50cyBJUm9vbUV4dGVuZGVyIHtcbiAgICBwdWJsaWMga2luZDogX1JvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsLlJPT007XG5cbiAgICBwcml2YXRlIG1lbWJlcnM6IEFycmF5PElVc2VyPjtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcm9vbTogSVJvb20pIHtcbiAgICAgICAgdGhpcy5raW5kID0gUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWwuUk9PTTtcbiAgICAgICAgdGhpcy5tZW1iZXJzID0gW107XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEN1c3RvbUZpZWxkKGtleTogc3RyaW5nLCB2YWx1ZTogdW5rbm93bik6IElSb29tRXh0ZW5kZXIge1xuICAgICAgICBpZiAoIXRoaXMucm9vbS5jdXN0b21GaWVsZHMpIHtcbiAgICAgICAgICAgIHRoaXMucm9vbS5jdXN0b21GaWVsZHMgPSB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnJvb20uY3VzdG9tRmllbGRzW2tleV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHJvb20gYWxyZWFkeSBjb250YWlucyBhIGN1c3RvbSBmaWVsZCBieSB0aGUga2V5OiAke2tleX1gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZXkuaW5jbHVkZXMoJy4nKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgZ2l2ZW4ga2V5IGNvbnRhaW5zIGEgcGVyaW9kLCB3aGljaCBpcyBub3QgYWxsb3dlZC4gS2V5OiAke2tleX1gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucm9vbS5jdXN0b21GaWVsZHNba2V5XSA9IHZhbHVlO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGRNZW1iZXIodXNlcjogSVVzZXIpOiBJUm9vbUV4dGVuZGVyIHtcbiAgICAgICAgaWYgKHRoaXMubWVtYmVycy5maW5kKCh1KSA9PiB1LnVzZXJuYW1lID09PSB1c2VyLnVzZXJuYW1lKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgdXNlciBpcyBhbHJlYWR5IGluIHRoZSByb29tLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5tZW1iZXJzLnB1c2godXNlcik7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE1lbWJlcnNCZWluZ0FkZGVkKCk6IEFycmF5PElVc2VyPiB7XG4gICAgICAgIHJldHVybiB0aGlzLm1lbWJlcnM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFVzZXJuYW1lc09mTWVtYmVyc0JlaW5nQWRkZWQoKTogQXJyYXk8c3RyaW5nPiB7XG4gICAgICAgIHJldHVybiB0aGlzLm1lbWJlcnMubWFwKCh1KSA9PiB1LnVzZXJuYW1lKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Um9vbSgpOiBJUm9vbSB7XG4gICAgICAgIHJldHVybiBzdHJ1Y3R1cmVkQ2xvbmUodGhpcy5yb29tKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsU0FBUyxPQUFPLFFBQVEsMEJBQTBCO0FBRWxELE1BQU0sRUFBRSwwQkFBMEIsRUFBRSxHQUFHLFFBQVE7QUFJL0MsT0FBTyxNQUFNOztFQUNGLEtBQXVDO0VBRXRDLFFBQXNCO0VBRTlCLFlBQVksQUFBUSxJQUFXLENBQUU7U0FBYixPQUFBO0lBQ2hCLElBQUksQ0FBQyxJQUFJLEdBQUcsMkJBQTJCLElBQUk7SUFDM0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFO0VBQ3JCO0VBRU8sZUFBZSxHQUFXLEVBQUUsS0FBYyxFQUFpQjtJQUM5RCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7TUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQztJQUM5QjtJQUVBLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFO01BQzdCLE1BQU0sSUFBSSxNQUFNLENBQUMscURBQXFELEVBQUUsSUFBSSxDQUFDO0lBQ2pGO0lBRUEsSUFBSSxJQUFJLFFBQVEsQ0FBQyxNQUFNO01BQ25CLE1BQU0sSUFBSSxNQUFNLENBQUMsNERBQTRELEVBQUUsSUFBSSxDQUFDO0lBQ3hGO0lBRUEsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHO0lBRTlCLE9BQU8sSUFBSTtFQUNmO0VBRU8sVUFBVSxJQUFXLEVBQWlCO0lBQ3pDLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssUUFBUSxHQUFHO01BQ3hELE1BQU0sSUFBSSxNQUFNO0lBQ3BCO0lBRUEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFFbEIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyx1QkFBcUM7SUFDeEMsT0FBTyxJQUFJLENBQUMsT0FBTztFQUN2QjtFQUVPLGtDQUFpRDtJQUNwRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBTSxFQUFFLFFBQVE7RUFDN0M7RUFFTyxVQUFpQjtJQUNwQixPQUFPLGdCQUFnQixJQUFJLENBQUMsSUFBSTtFQUNwQztBQUNKIn0=