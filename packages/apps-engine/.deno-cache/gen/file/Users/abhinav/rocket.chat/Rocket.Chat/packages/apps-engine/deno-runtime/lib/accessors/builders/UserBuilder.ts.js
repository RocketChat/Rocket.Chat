import { require } from '../../../lib/require.ts';
const { RocketChatAssociationModel } = require('@rocket.chat/apps-engine/definition/metadata/RocketChatAssociations.js');
export class UserBuilder {
  kind;
  user;
  constructor(user){
    this.kind = RocketChatAssociationModel.USER;
    this.user = user || {};
  }
  setData(data) {
    delete data.id;
    this.user = data;
    return this;
  }
  setEmails(emails) {
    this.user.emails = emails;
    return this;
  }
  getEmails() {
    return this.user.emails;
  }
  setDisplayName(name) {
    this.user.name = name;
    return this;
  }
  getDisplayName() {
    return this.user.name;
  }
  setUsername(username) {
    this.user.username = username;
    return this;
  }
  getUsername() {
    return this.user.username;
  }
  setRoles(roles) {
    this.user.roles = roles;
    return this;
  }
  getRoles() {
    return this.user.roles;
  }
  getSettings() {
    return this.user.settings;
  }
  getUser() {
    if (!this.user.username) {
      throw new Error('The "username" property is required.');
    }
    if (!this.user.name) {
      throw new Error('The "name" property is required.');
    }
    return this.user;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvYWJoaW5hdi9yb2NrZXQuY2hhdC9Sb2NrZXQuQ2hhdC9wYWNrYWdlcy9hcHBzLWVuZ2luZS9kZW5vLXJ1bnRpbWUvbGliL2FjY2Vzc29ycy9idWlsZGVycy9Vc2VyQnVpbGRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IElVc2VyQnVpbGRlciB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL2FjY2Vzc29ycy9JVXNlckJ1aWxkZXIudHMnO1xuaW1wb3J0IHR5cGUgeyBJVXNlciB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL3VzZXJzL0lVc2VyLnRzJztcbmltcG9ydCB0eXBlIHsgSVVzZXJTZXR0aW5ncyB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL3VzZXJzL0lVc2VyU2V0dGluZ3MudHMnO1xuaW1wb3J0IHR5cGUgeyBJVXNlckVtYWlsIH0gZnJvbSAnQHJvY2tldC5jaGF0L2FwcHMtZW5naW5lL2RlZmluaXRpb24vdXNlcnMvSVVzZXJFbWFpbC50cyc7XG5pbXBvcnQgdHlwZSB7IFJvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsIGFzIF9Sb2NrZXRDaGF0QXNzb2NpYXRpb25Nb2RlbCB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL21ldGFkYXRhL1JvY2tldENoYXRBc3NvY2lhdGlvbnMudHMnO1xuXG5pbXBvcnQgeyByZXF1aXJlIH0gZnJvbSAnLi4vLi4vLi4vbGliL3JlcXVpcmUudHMnO1xuXG5jb25zdCB7IFJvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsIH0gPSByZXF1aXJlKCdAcm9ja2V0LmNoYXQvYXBwcy1lbmdpbmUvZGVmaW5pdGlvbi9tZXRhZGF0YS9Sb2NrZXRDaGF0QXNzb2NpYXRpb25zLmpzJykgYXMge1xuICAgIFJvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsOiB0eXBlb2YgX1JvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsO1xufTtcblxuZXhwb3J0IGNsYXNzIFVzZXJCdWlsZGVyIGltcGxlbWVudHMgSVVzZXJCdWlsZGVyIHtcbiAgICBwdWJsaWMga2luZDogX1JvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsLlVTRVI7XG5cbiAgICBwcml2YXRlIHVzZXI6IFBhcnRpYWw8SVVzZXI+O1xuXG4gICAgY29uc3RydWN0b3IodXNlcj86IFBhcnRpYWw8SVVzZXI+KSB7XG4gICAgICAgIHRoaXMua2luZCA9IFJvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsLlVTRVI7XG4gICAgICAgIHRoaXMudXNlciA9IHVzZXIgfHwgKHt9IGFzIFBhcnRpYWw8SVVzZXI+KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0RGF0YShkYXRhOiBQYXJ0aWFsPElVc2VyPik6IElVc2VyQnVpbGRlciB7XG4gICAgICAgIGRlbGV0ZSBkYXRhLmlkO1xuICAgICAgICB0aGlzLnVzZXIgPSBkYXRhO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRFbWFpbHMoZW1haWxzOiBBcnJheTxJVXNlckVtYWlsPik6IElVc2VyQnVpbGRlciB7XG4gICAgICAgIHRoaXMudXNlci5lbWFpbHMgPSBlbWFpbHM7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRFbWFpbHMoKTogQXJyYXk8SVVzZXJFbWFpbD4ge1xuICAgICAgICByZXR1cm4gdGhpcy51c2VyLmVtYWlscyE7XG4gICAgfVxuXG4gICAgcHVibGljIHNldERpc3BsYXlOYW1lKG5hbWU6IHN0cmluZyk6IElVc2VyQnVpbGRlciB7XG4gICAgICAgIHRoaXMudXNlci5uYW1lID0gbmFtZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldERpc3BsYXlOYW1lKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXIubmFtZSE7XG4gICAgfVxuXG4gICAgcHVibGljIHNldFVzZXJuYW1lKHVzZXJuYW1lOiBzdHJpbmcpOiBJVXNlckJ1aWxkZXIge1xuICAgICAgICB0aGlzLnVzZXIudXNlcm5hbWUgPSB1c2VybmFtZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFVzZXJuYW1lKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXIudXNlcm5hbWUhO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRSb2xlcyhyb2xlczogQXJyYXk8c3RyaW5nPik6IElVc2VyQnVpbGRlciB7XG4gICAgICAgIHRoaXMudXNlci5yb2xlcyA9IHJvbGVzO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Um9sZXMoKTogQXJyYXk8c3RyaW5nPiB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXIucm9sZXMhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRTZXR0aW5ncygpOiBQYXJ0aWFsPElVc2VyU2V0dGluZ3M+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXNlci5zZXR0aW5ncztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0VXNlcigpOiBQYXJ0aWFsPElVc2VyPiB7XG4gICAgICAgIGlmICghdGhpcy51c2VyLnVzZXJuYW1lKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBcInVzZXJuYW1lXCIgcHJvcGVydHkgaXMgcmVxdWlyZWQuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMudXNlci5uYW1lKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBcIm5hbWVcIiBwcm9wZXJ0eSBpcyByZXF1aXJlZC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnVzZXI7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLFNBQVMsT0FBTyxRQUFRLDBCQUEwQjtBQUVsRCxNQUFNLEVBQUUsMEJBQTBCLEVBQUUsR0FBRyxRQUFRO0FBSS9DLE9BQU8sTUFBTTtFQUNGLEtBQXVDO0VBRXRDLEtBQXFCO0VBRTdCLFlBQVksSUFBcUIsQ0FBRTtJQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLDJCQUEyQixJQUFJO0lBQzNDLElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUyxDQUFDO0VBQzFCO0VBRU8sUUFBUSxJQUFvQixFQUFnQjtJQUMvQyxPQUFPLEtBQUssRUFBRTtJQUNkLElBQUksQ0FBQyxJQUFJLEdBQUc7SUFFWixPQUFPLElBQUk7RUFDZjtFQUVPLFVBQVUsTUFBeUIsRUFBZ0I7SUFDdEQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUc7SUFDbkIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxZQUErQjtJQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTtFQUMzQjtFQUVPLGVBQWUsSUFBWSxFQUFnQjtJQUM5QyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRztJQUNqQixPQUFPLElBQUk7RUFDZjtFQUVPLGlCQUF5QjtJQUM1QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtFQUN6QjtFQUVPLFlBQVksUUFBZ0IsRUFBZ0I7SUFDL0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUc7SUFDckIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxjQUFzQjtJQUN6QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtFQUM3QjtFQUVPLFNBQVMsS0FBb0IsRUFBZ0I7SUFDaEQsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUc7SUFDbEIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxXQUEwQjtJQUM3QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztFQUMxQjtFQUVPLGNBQXNDO0lBQ3pDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRO0VBQzdCO0VBRU8sVUFBMEI7SUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO01BQ3JCLE1BQU0sSUFBSSxNQUFNO0lBQ3BCO0lBRUEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO01BQ2pCLE1BQU0sSUFBSSxNQUFNO0lBQ3BCO0lBRUEsT0FBTyxJQUFJLENBQUMsSUFBSTtFQUNwQjtBQUNKIn0=