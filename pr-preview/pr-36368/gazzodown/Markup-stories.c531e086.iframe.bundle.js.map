{"version":3,"file":"Markup-stories.c531e086.iframe.bundle.js","mappings":";;;;AAwBA;;;AChBA;;AAIA;AACA;;;;;;;ACcA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkPA","sources":["webpack://@rocket.chat/gazzodown/../ui-client/dist/components/MultiSelectCustom/MultiSelectCustomAnchor.js","webpack://@rocket.chat/gazzodown/../../../src/components/RoomBanner/RoomBanner.tsx","webpack://@rocket.chat/gazzodown/./src/Markup.stories.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { css } from '@rocket.chat/css-in-js';\nimport { Box, Icon } from '@rocket.chat/fuselage';\nimport { forwardRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nconst MultiSelectCustomAnchor = forwardRef(function MultiSelectCustomAnchor(_a, ref) {\n    var { className, collapsed, selectedOptionsCount, selectedOptionsTitle, defaultTitle, maxCount } = _a, props = __rest(_a, [\"className\", \"collapsed\", \"selectedOptionsCount\", \"selectedOptionsTitle\", \"defaultTitle\", \"maxCount\"]);\n    const { t } = useTranslation();\n    const customStyle = css `\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n    const isDirty = selectedOptionsCount > 0 && selectedOptionsCount !== maxCount - 1;\n    return (_jsxs(Box, Object.assign({ ref: ref, role: 'button', tabIndex: 0, display: 'flex', justifyContent: 'space-between', alignItems: 'center', h: 'x40', className: ['rcx-input-box__wrapper', customStyle, ...(Array.isArray(className) ? className : [className])].filter(Boolean) }, props, { children: [isDirty ? `${t(selectedOptionsTitle)} (${selectedOptionsCount})` : t(defaultTitle), _jsx(Icon, { name: collapsed ? 'chevron-up' : 'chevron-down', fontSize: 'x20', color: 'hint' })] })));\n});\nexport default MultiSelectCustomAnchor;\n//# sourceMappingURL=MultiSelectCustomAnchor.js.map",null,"import { css } from '@rocket.chat/css-in-js';\nimport { Box, MessageBody, MessageContainer } from '@rocket.chat/fuselage';\nimport colors from '@rocket.chat/fuselage-tokens/colors.json';\nimport { Options, parse } from '@rocket.chat/message-parser';\nimport type { Meta, StoryFn } from '@storybook/react';\nimport outdent from 'outdent';\nimport { ReactElement, Suspense } from 'react';\n\nimport Markup from './Markup';\nimport { MarkupInteractionContext } from './MarkupInteractionContext';\n\nexport default {\n\ttitle: 'Markup',\n\tcomponent: Markup,\n\tdecorators: [\n\t\t(Story): ReactElement => (\n\t\t\t<Suspense fallback={null}>\n\t\t\t\t<MarkupInteractionContext.Provider value={{ enableTimestamp: true }}>\n\t\t\t\t\t<MessageContainer>\n\t\t\t\t\t\t<MessageBody>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\t\t> blockquote {\n\t\t\t\t\t\t\t\t\t\tpadding-inline: 8px;\n\t\t\t\t\t\t\t\t\t\tborder-radius: 2px;\n\t\t\t\t\t\t\t\t\t\tborder-width: 2px;\n\t\t\t\t\t\t\t\t\t\tborder-style: solid;\n\t\t\t\t\t\t\t\t\t\tbackground-color: var(--rcx-color-neutral-100, ${colors.n100});\n\t\t\t\t\t\t\t\t\t\tborder-color: var(--rcx-color-neutral-200, ${colors.n200});\n\t\t\t\t\t\t\t\t\t\tborder-inline-start-color: var(--rcx-color-neutral-600, ${colors.n600});\n\n\t\t\t\t\t\t\t\t\t\t&:hover,\n\t\t\t\t\t\t\t\t\t\t&:focus {\n\t\t\t\t\t\t\t\t\t\t\tbackground-color: var(--rcx-color-neutral-200, ${colors.n200});\n\t\t\t\t\t\t\t\t\t\t\tborder-color: var(--rcx-color-neutral-300, ${colors.n300});\n\t\t\t\t\t\t\t\t\t\t\tborder-inline-start-color: var(--rcx-color-neutral-600, ${colors.n600});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t> ul.task-list {\n\t\t\t\t\t\t\t\t\t\t> li::before {\n\t\t\t\t\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t> li > .rcx-check-box > .rcx-check-box__input:focus + .rcx-check-box__fake {\n\t\t\t\t\t\t\t\t\t\t\tz-index: 1;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tlist-style: none;\n\t\t\t\t\t\t\t\t\t\tmargin-inline-start: 0;\n\t\t\t\t\t\t\t\t\t\tpadding-inline-start: 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Story />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</MessageBody>\n\t\t\t\t\t</MessageContainer>\n\t\t\t\t</MarkupInteractionContext.Provider>\n\t\t\t\t{/* workaround? */}\n\t\t\t\t<Box />\n\t\t\t</Suspense>\n\t\t),\n\t],\n\tparameters: {\n\t\tdocs: {\n\t\t\tsource: {\n\t\t\t\tcode: 'Disabled for this story, see https://github.com/storybookjs/storybook/issues/11554',\n\t\t\t},\n\t\t},\n\t},\n} satisfies Meta<typeof Markup>;\n\nconst Template: StoryFn<typeof Markup> = (args) => <Markup {...args} />;\n\nexport const Empty = Template.bind({});\nEmpty.args = {\n\ttokens: [],\n};\n\nexport const Timestamp = Template.bind({});\n\nTimestamp.args = {\n\ttokens: parse(`Short time: <t:${((): number => Math.floor(Date.now() / 1000))()}:t>\n\tLong time: <t:${((): number => Math.floor(Date.now() / 1000))()}:T>\n\tShort date: <t:${((): number => Math.floor(Date.now() / 1000))()}:d>\n\tLong date: <t:${((): number => Math.floor(Date.now() / 1000))()}:D>\n\tFull date: <t:${((): number => Math.floor(Date.now() / 1000))()}:f>\n\tFull date (long): <t:${((): number => Math.floor(Date.now() / 1000))()}:F>\n\tRelative time from past: <t:${((): number => {\n\t\tconst date = new Date();\n\t\tdate.setHours(date.getHours() - 1);\n\t\treturn Math.floor(date.getTime() / 1000);\n\t})()}:R>\n\tRelative to Future: <t:${((): number => {\n\t\tconst date = new Date();\n\t\tdate.setHours(date.getHours() + 1);\n\t\treturn Math.floor(date.getTime() / 1000);\n\t})()}:R>\n\tRelative Seconds: <t:${((): number => {\n\t\tconst date = new Date();\n\t\tdate.setSeconds(date.getSeconds() - 1);\n\t\treturn Math.floor(date.getTime() / 1000);\n\t})()}:R>\n\n`),\n};\n\nexport const BigEmoji = Template.bind({});\nBigEmoji.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'BIG_EMOJI',\n\t\t\tvalue: [\n\t\t\t\t{ type: 'EMOJI', value: { type: 'PLAIN_TEXT', value: 'smile' }, shortCode: 'smile' },\n\t\t\t\t{ type: 'EMOJI', value: undefined, unicode: 'ðŸ˜€' },\n\t\t\t\t{ type: 'EMOJI', value: { type: 'PLAIN_TEXT', value: 'smile' }, shortCode: 'smile' },\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const Paragraph = Template.bind({});\nParagraph.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'PARAGRAPH',\n\t\t\tvalue: [{ type: 'PLAIN_TEXT', value: 'Hello' }],\n\t\t},\n\t],\n};\n\nexport const Heading = Template.bind({});\nHeading.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'HEADING',\n\t\t\tlevel: 2,\n\t\t\tvalue: [{ type: 'PLAIN_TEXT', value: 'Hello' }],\n\t\t},\n\t],\n};\n\nexport const UnorderedList = Template.bind({});\nUnorderedList.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'UNORDERED_LIST',\n\t\t\tvalue: [\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'Hello' }] },\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'Hola' }] },\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'ä½ å¥½' }] },\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const OrderedList = Template.bind({});\nOrderedList.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'ORDERED_LIST',\n\t\t\tvalue: [\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'Hello' }] },\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'Hola' }] },\n\t\t\t\t{ type: 'LIST_ITEM', value: [{ type: 'PLAIN_TEXT', value: 'ä½ å¥½' }] },\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const TaskList = Template.bind({});\nTaskList.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'TASKS',\n\t\t\tvalue: [\n\t\t\t\t{ type: 'TASK', status: true, value: [{ type: 'PLAIN_TEXT', value: 'Chores' }] },\n\t\t\t\t{ type: 'TASK', status: false, value: [{ type: 'PLAIN_TEXT', value: 'Dishes' }] },\n\t\t\t\t{ type: 'TASK', status: true, value: [{ type: 'PLAIN_TEXT', value: 'Laundry' }] },\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const Blockquote = Template.bind({});\nBlockquote.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'QUOTE',\n\t\t\tvalue: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'PARAGRAPH',\n\t\t\t\t\tvalue: [{ type: 'PLAIN_TEXT', value: 'Cogito ergo sum.' }],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'PARAGRAPH',\n\t\t\t\t\tvalue: [{ type: 'PLAIN_TEXT', value: 'Sit amet, consectetur adipiscing elit.' }],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'PARAGRAPH',\n\t\t\t\t\tvalue: [{ type: 'PLAIN_TEXT', value: 'Donec eget ex euismod, euismod nisi euismod, vulputate nisi.' }],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const Code = Template.bind({});\nCode.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'CODE',\n\t\t\tvalue: [{ type: 'CODE_LINE', value: { type: 'PLAIN_TEXT', value: 'const foo = bar;' } }],\n\t\t\tlanguage: undefined,\n\t\t},\n\t],\n};\n\nexport const CodeWithLanguage = Template.bind({});\nCodeWithLanguage.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'CODE',\n\t\t\tvalue: [{ type: 'CODE_LINE', value: { type: 'PLAIN_TEXT', value: 'const foo = bar;' } }],\n\t\t\tlanguage: 'javascript',\n\t\t},\n\t],\n};\n\nexport const Katex = Template.bind({});\nKatex.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'KATEX',\n\t\t\tvalue: 'x^2 + y^2 = z^2',\n\t\t},\n\t],\n};\n\nexport const LineBreak = Template.bind({});\nLineBreak.args = {\n\ttokens: [\n\t\t{\n\t\t\ttype: 'LINE_BREAK',\n\t\t\tvalue: undefined,\n\t\t},\n\t],\n};\n\nexport const Example: StoryFn<{ msg: string }> = ({ msg }) => {\n\tconst parseOptions: Options = { katex: { dollarSyntax: true, parenthesisSyntax: true }, colors: true, emoticons: true };\n\n\treturn <Markup tokens={parse(msg, parseOptions)} />;\n};\nExample.args = {\n\tmsg: outdent`\n\t\t:smile:ðŸ˜€:smile:\n\n\t\tHello, world!\n\n\t\t# Heading 1\n\t\t## Heading 2\n\t\t### Heading 3\n\t\t#### Heading 4\n\n\t\t* Bullet point 1\n\t\t* Bullet point 2\n\t\t* Bullet point 3\n\n\t\t1. Numbered point 1\n\t\t2. Numbered point 2\n\t\t3. Numbered point 3\n\n\t\t- [x] Chores\n\t\t- [ ] Dishes\n\t\t- [x] Laundry\n\n\t\t> Cogito ergo sum.\n\t\t> Sit amet, consectetur adipiscing elit.\n\t\t> Donec eget ex euismod, euismod nisi euismod, vulputate nisi.\n\n\t\t\\`\\`\\`\n\t\tconst x = 1;\n\t\t\\`\\`\\`\n\n\t\t\\`\\`\\`js\n\t\tconst x = 1;\n\t\t\\`\\`\\`\n\n\t\t\\`\\`\\`invalid\n\t\tconst x = 1;\n\t\t\\`\\`\\`\n\t`,\n};\n"],"names":[],"sourceRoot":""}